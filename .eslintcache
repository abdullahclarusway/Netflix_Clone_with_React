[{"D:\\My_Clarusway_FullStack\\My_Projects\\netflix-clone-with-react\\src\\index.js":"1","D:\\My_Clarusway_FullStack\\My_Projects\\netflix-clone-with-react\\src\\reportWebVitals.js":"2","D:\\My_Clarusway_FullStack\\My_Projects\\netflix-clone-with-react\\src\\App.js":"3","D:\\My_Clarusway_FullStack\\My_Projects\\netflix-clone-with-react\\src\\Row.js":"4","D:\\My_Clarusway_FullStack\\My_Projects\\netflix-clone-with-react\\src\\requests.js":"5","D:\\My_Clarusway_FullStack\\My_Projects\\netflix-clone-with-react\\src\\axios.js":"6","D:\\My_Clarusway_FullStack\\My_Projects\\netflix-clone-with-react\\src\\Banner.js":"7","D:\\My_Clarusway_FullStack\\My_Projects\\netflix-clone-with-react\\src\\Nav.js":"8","D:\\My_Clarusway_FullStack\\My_Projects\\netflix-clone-with-react\\src\\Main.js":"9","D:\\My_Clarusway_FullStack\\My_Projects\\netflix-clone-with-react\\src\\Search.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":574,"mtime":1615296415354,"results":"14","hashOfConfig":"12"},{"size":3779,"mtime":1615330025256,"results":"15","hashOfConfig":"12"},{"size":827,"mtime":1615330583103,"results":"16","hashOfConfig":"12"},{"size":193,"mtime":1609541138267,"results":"17","hashOfConfig":"12"},{"size":1494,"mtime":1615064476082,"results":"18","hashOfConfig":"12"},{"size":1042,"mtime":1615320554238,"results":"19","hashOfConfig":"12"},{"size":826,"mtime":1615296175200,"results":"20","hashOfConfig":"12"},{"size":1151,"mtime":1615330624286,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"tija11",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\My_Clarusway_FullStack\\My_Projects\\netflix-clone-with-react\\src\\index.js",[],["45","46"],"D:\\My_Clarusway_FullStack\\My_Projects\\netflix-clone-with-react\\src\\reportWebVitals.js",[],"D:\\My_Clarusway_FullStack\\My_Projects\\netflix-clone-with-react\\src\\App.js",["47","48"],"import \"./App.css\";\nimport Row from \"./Row\";\nimport requests from \"./requests\";\nimport Banner from \"./Banner\";\nimport Nav from \"./Nav\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Main from \"./Main\";\nimport Search from \"./Search\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Nav />\n        <Banner />\n        <Switch>\n          <Route path=\"/search\" component={Search} exact />\n          <Route path=\"/\" component={Main} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","D:\\My_Clarusway_FullStack\\My_Projects\\netflix-clone-with-react\\src\\Row.js",["49","50"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Row.css\";\r\nimport axios from \"./axios\";\r\nimport Youtube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\nimport Modal from \"react-modal\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original\";\r\nconst base_image =\r\n  \"https://bashooka.com/wp-content/uploads/2013/01/movie-poster-mashups-19.jpg\";\r\n\r\nconst Row = ({ title, fetchUrl, isLargeRow, isSearch, searchMovieUrl }) => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [selectedFilm, setSelectedFilm] = useState(\"\");\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl || searchMovieUrl);\r\n      setMovies(request.data.results);\r\n      setLoading(false);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl, searchMovieUrl]);\r\n\r\n  const opts = {\r\n    height: \"390px\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  const handleClick = (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(movie?.name || \"\")\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n  console.log(movies);\r\n  const [modalIsOpen, setIsOpen] = React.useState(false);\r\n  function onFilmSelect(movie) {\r\n    setIsOpen(true);\r\n    setSelectedFilm(movie);\r\n  }\r\n\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {/* {loading ? (\r\n        <h2>Loading...</h2>\r\n      ) : (\r\n        <> */}\r\n      <h2>{title}</h2>\r\n      <div className=\"row__posters\">\r\n        {movies.map((movie) => (\r\n          <>\r\n            <img\r\n              key={movie.id}\r\n              onClick={\r\n                isLargeRow\r\n                  ? () => handleClick(movie)\r\n                  : () => onFilmSelect(movie)\r\n              }\r\n              className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n              src={`${base_url}${\r\n                isLargeRow || isSearch\r\n                  ? movie.poster_path\r\n                  : movie.backdrop_path || movie.poster_path\r\n              }`}\r\n              alt={movie.name}\r\n            />\r\n          </>\r\n        ))}\r\n      </div>\r\n      {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        contentLabel=\"Example Modal\"\r\n      >\r\n        <div className=\"modal_container\">\r\n          <img\r\n            key={selectedFilm.id}\r\n            className=\"modal__poster\"\r\n            src={`${base_url}${\r\n              selectedFilm.backdrop_path || selectedFilm.poster_path\r\n            }`}\r\n            alt={selectedFilm.name}\r\n          />\r\n          <div className=\"modal_detail\">\r\n            <h2 className=\"modal_title\">\r\n              {selectedFilm.title || selectedFilm.name}\r\n            </h2>\r\n            <p className=\"modal_info\">{selectedFilm.overview}</p>\r\n            <p className=\"modal_info\">\r\n              Avarage Vote: {selectedFilm.vote_average}\r\n            </p>\r\n            <p className=\"modal_info\">\r\n              Release Date: {selectedFilm.release_date}\r\n            </p>\r\n            <button onClick={closeModal}>Close</button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n","D:\\My_Clarusway_FullStack\\My_Projects\\netflix-clone-with-react\\src\\requests.js",[],"D:\\My_Clarusway_FullStack\\My_Projects\\netflix-clone-with-react\\src\\axios.js",[],"D:\\My_Clarusway_FullStack\\My_Projects\\netflix-clone-with-react\\src\\Banner.js",[],"D:\\My_Clarusway_FullStack\\My_Projects\\netflix-clone-with-react\\src\\Nav.js",[],"D:\\My_Clarusway_FullStack\\My_Projects\\netflix-clone-with-react\\src\\Main.js",[],"D:\\My_Clarusway_FullStack\\My_Projects\\netflix-clone-with-react\\src\\Search.js",["51","52","53"],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":11},{"ruleId":"58","severity":1,"message":"62","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":16},{"ruleId":"58","severity":1,"message":"63","line":20,"column":7,"nodeType":"60","messageId":"61","endLine":20,"endColumn":17},{"ruleId":"58","severity":1,"message":"64","line":27,"column":10,"nodeType":"60","messageId":"61","endLine":27,"endColumn":17},{"ruleId":"58","severity":1,"message":"65","line":1,"column":27,"nodeType":"60","messageId":"61","endLine":1,"endColumn":36},{"ruleId":"58","severity":1,"message":"66","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":13},{"ruleId":"58","severity":1,"message":"62","line":4,"column":8,"nodeType":"60","messageId":"61","endLine":4,"endColumn":16},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'requests' is defined but never used.","'base_image' is assigned a value but never used.","'loading' is assigned a value but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]